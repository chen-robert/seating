<html>
<head>
  <title><%= title %></title>
  <script src="//ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
  <script src="//cdnjs.cloudflare.com/ajax/libs/seedrandom/3.0.5/seedrandom.min.js"></script>
  <link rel="stylesheet" href="/styles/main.css">
  <link href="https://fonts.googleapis.com/css?family=Roboto&display=swap" rel="stylesheet">
</head>
<body>
  <div class="main">
    <section class="sidebar" id="sidebar">
    </section>
    <table>
      <tbody id="main">
      
      </tbody>
    </table>
  </div>
</body>
<script>
Math.seedrandom("<%= seed %>");

const grid = <%- JSON.stringify(layout) %>;
for(var i = 0; i <= grid.length; i++) {
  let row = "<tr>";
  for(var j = 0; j <= grid[0].length; j++) {
    if(i == 0 || j == 0) {
      let num = "";
      if(i != 0) num = String.fromCharCode("a".charCodeAt(0) + i - 1);
      if(j != 0) num = j;
      row += `<td class="grid--small">${num}</td>`;
    } else {
      row += `<td class="grid--big" data-coords="${(i - 1) + "," + (j - 1)}"><p></p></td>`;
    }

  }
  row += "</tr>";
  
  main.insertAdjacentHTML("beforeend", row);
}

const shuffle = a => {
  for (let i = a.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [a[i], a[j]] = [a[j], a[i]];
  }
  return a;
}

const names = <%- JSON.stringify(names) %>;
const prefMap = <%- JSON.stringify(prefMap) %>;
const size = grid.length;


for(let i = 0; i < grid.length; i++){
  for(let j = 0; j < grid[i].length; j++){
    if(grid[i][j]) $(`td[data-coords="${i + "," + j}"]`).toggleClass("clicked");
  }  
}


const cleanName = name => {
  const parts = name.split(",").map(a => a.trim().charAt(0).toUpperCase());
  
  return parts[1] + parts[0]; 
}

const displaySidebar = list => {
  list.sort((a, b) => a.name.localeCompare(b.name));

  $("#sidebar").html("");
  for(const {name, x, y} of list) {
    $("#sidebar").append(`
      <div class="sidebar__row">
        <div class="sidebar__title">${name}</div>
        <div class="sidebar__pos">${String.fromCharCode("a".charCodeAt(0) + x)} - ${y + 1}</div>
      </div>
    `)
  }
}

const permute = (arr, lim, fn, idx=0, base=[]) => {
  if(base.length === lim) return fn(base.concat());

  for(let i = idx; i < arr.length; i++) {
    base.push(i);
    permute(arr, lim, fn, i + 1, base);
    base.pop();
  }
}

const score = (idx, names, debug) => {
  const group = idx.map(i => names[i]);
  return group
    .map(name => {
      let curr = prefMap[name]
        .map(name => group.includes(name) ? 1: 0)
        .reduce((a, b) => a + b, 0);

      if(prefMap[name].length === 0) curr = 1;
      else curr /= prefMap[name].length;

      if(curr === 0 && debug) console.log(name);

      return curr === 0? -100: curr;
    })
    .reduce((a, b) => a + b, 0) + Math.random() - 0.5;
}

const relabel = () => {
  let curr = names.slice();
  shuffle(curr);

  let tot = 0;

  const ret = [];
  const tables = [5, 5, 5, 5, 5, 6];
  while(tables.length !== 0) {
    let bestIdx = null;
    permute(curr, tables[tables.length - 1], idx => {
      if(bestIdx === null) bestIdx = idx;
      else if(score(bestIdx, curr) < score(idx, curr)) bestIdx = idx;
    });
   
    tot += score(bestIdx, curr, true);
    ret.push(bestIdx.map(i => curr[i]));

    const nxt = [];
    for(let i = 0; i < curr.length; i++) {
      if(!bestIdx.includes(i)) nxt.push(curr[i]);
    }
    curr = nxt;
    
    tables.pop();
  }
  console.log(ret);
  console.log(tot);
}

for(let i = 0; i < 10; i++)relabel();



</script>
</body>
</html>
